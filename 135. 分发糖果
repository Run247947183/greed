class Solution {
    // 根据题目要求
    // 如果 ratings[i] > ratings[i - 1] 则 i 位置的糖果大于 i - 1位置的糖果
    // 反之也一样，所以必须要满足这两个条件
    // 建立 left 和 right 数组，分别从开头和结尾位置开始遍历，初始两个数组元素都为 1 
    public int candy(int[] ratings) {
        int len = ratings.length;
        if (len == 0) {
            return 0;
        }
        int[] left = new int[len];
        int[] right = new int[len];
        Arrays.fill(left, 1);
        Arrays.fill(right, 1);
        for (int i = 1; i < len; i++) {
            if (ratings[i] > ratings[i - 1]) {
                left[i] = left[i - 1] + 1;
            }
        }
        int count = Math.max(left[len - 1], right[len - 1]);
        for (int i = len - 2; i >= 0; i--) {
            if (ratings[i] > ratings[i + 1]) {
                right[i] = right[i + 1] + 1;
            }
            // 最大值才能满足两者的情况
            count += Math.max(left[i], right[i]);
        }
        return count;
    }
}
